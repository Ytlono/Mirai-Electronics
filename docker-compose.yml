services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: mirai-electronics-app
    ports:
      - "8080:8080"
    environment:
      - spring.datasource.url=jdbc:postgresql://db:5432/mirai_electronics
      - spring.datasource.username=postgres
      - spring.datasource.password=pstgrs

      - spring.mail.username=iceinfire9@gmail.com
      - spring.mail.password=ngwm vbqq xkpn mlgs

      - jwt.secret.key=hJ6xG47sWtAe6Q+kD7xT/JH1MJl3wsc91n45UwMkZB0=

      - spring.data.elasticsearch.cluster-nodes=elastic:9200


    depends_on:
      db:
        condition: service_healthy
      elastic:
        condition: service_healthy
    networks:
      - app-network
  db:
    image: postgres:15
    restart: on-failure
    environment:
        POSTGRES_DB: demo_spring
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: pstgrs
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network
  elastic:
    image: elasticsearch:8.12.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    healthcheck:
      test: [ "CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -q '\"status\":\"green\"' || grep -q '\"status\":\"yellow\"'" ]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - app-network
volumes:
  pg_data:

networks:
  app-network:
    driver: bridge